#include <csignal>

rclcpp::Node::SharedPtr node = nullptr;
pcl::PointCloud<PointType>::Ptr global_map(new pcl::PointCloud<PointType>());

void signalHandler(int signum) 
{
  RCLCPP_INFO(node->get_logger(), "Ctrl+C received, saving map...");
  std::string save_map_file;
  node->get_parameter("save_map_file", save_map_file);
  RCLCPP_INFO(node->get_logger(), "Saving map to %s", save_map_file.c_str());
  pcl::io::savePCDFileBinary(save_map_file, *global_map);
  RCLCPP_INFO(node->get_logger(), "Map saved successfully");
  rclcpp::shutdown();
  exit(signum);
}

int main(int argc, char** argv)
{
  rclcpp::init(argc, argv);
  node = std::make_shared<PoseEstimationNode>();
  
  // シグナルハンドラの設定
  signal(SIGINT, signalHandler);
  
  rclcpp::spin(node);
  rclcpp::shutdown();
  return 0;
}
